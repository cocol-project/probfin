{"repository_name":"github.com/cocol-project/probfin","body":"# Cocol Probabilistic Finality\n\nBased on DAGs, it manages chains, sidechains and orphans. Given a threshold of\nconfirmations it returns the next finalized block.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n``` yaml\n   dependencies:\n     probfin:\n       github: cocol-project/probfin\n```\n\n2. Run `shards install`\n\n## Usage\n\n``` crystal\nrequire \"probfin\"\n```\n\n``` crystal\n# (a0)---aa---ba---ca---da---ea---fa\n#              \\    \\\n#               bb   cb---cc\n\n# add blocks (aa, a0 should be block hashes)\nProbFin.push(block: \"aa\", parent: \"a0\")\nProbFin.push(block: \"ba\", parent: \"aa\")\nProbFin.push(block: \"bb\", parent: \"ba\")\n...\n\n\nProbFin.finalize from: \"aa\",\n    chain_length_threshold: 5, # 5 confirmations (fa being the 5th) \n    tip_diff_threshold: 0 # how many more confirmations should it have compared to sidechains\n    \n# => ba\n```\n\n## How ProbFin works\n![Alt Text](https://thepracticaldev.s3.amazonaws.com/i/bfimp8gtxgbiyc5pb480.png)\n\nThe data structure above resembles a Directed Acyclic Graph (DAG) and fortunately DAGs allow for an easy way to find the longest chain. This is an important part of achieving probabilistic finality.\n\nA DAG is made up of nodes (also called vertices) and edges. An edge represents a link between 2 vertices (e.g. `3000.1->3001.1`). We can and should traverse a DAG to find out more about its structure, like how far away is vertex `3005.1` from vertex `3000.1`\n\nAdditionally a DAG has some unique properties. Find out more about it [here](https://www.youtube.com/watch?v=TXkDpqjDMHA)\n\n**2. How to find the longest chain**\n\nIf we look again at the example above, it becomes apparent that `3005.1` is the tip of the longest chain. But how can we find it out programmatically?\n\nWe are going to use [Depth First Search](https://www.youtube.com/watch?v=7fujbpJ0LB4) to traverse the graph and mark every vertex with its distance from the starting vertex.\nWe start at `3000.1` and give it a distance of `0`. Now we traverse through all vertices and give each a distance of `parent distance + 1`. So `3001.1` has a `parent distance` of `0` and `+1` gives a distance of `1`.\n\n![Alt Text](https://thepracticaldev.s3.amazonaws.com/i/qexgjvm9yv8ko8cwv6y2.png)\n\n## Contributing\n\n1. Fork it (<https://github.com/cocol-project/probfin/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [cserb](https://github.com/cserb) - creator and maintainer\n","program":{"html_id":"github.com/cocol-project/probfin/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/cocol-project/probfin","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/cocol-project/probfin/DAG","path":"DAG.html","kind":"module","full_name":"DAG","name":"DAG","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dag.cr","line_number":5,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/cocol-project/probfin/DAG","kind":"module","full_name":"DAG","name":"DAG"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"tip_of_longest_branch(fromvertex:DAG::Vertex):DAG::Tip-instance-method","html_id":"tip_of_longest_branch(fromvertex:DAG::Vertex):DAG::Tip-instance-method","name":"tip_of_longest_branch","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"DAG::Vertex"}],"args_string":"(from vertex : DAG::Vertex) : DAG::Tip","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L81","def":{"name":"tip_of_longest_branch","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"DAG::Vertex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DAG::Tip","visibility":"Public","body":"tips = self.tips(from: vertex)\ntip_of_longest_branch(from: tips)\n"}},{"id":"tip_of_longest_branch(fromtips:Array(DAG::Tip)):DAG::Tip-instance-method","html_id":"tip_of_longest_branch(fromtips:Array(DAG::Tip)):DAG::Tip-instance-method","name":"tip_of_longest_branch","doc":null,"summary":null,"abstract":false,"args":[{"name":"tips","doc":null,"default_value":"","external_name":"from","restriction":"Array(DAG::Tip)"}],"args_string":"(from tips : Array(DAG::Tip)) : DAG::Tip","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L87","def":{"name":"tip_of_longest_branch","args":[{"name":"tips","doc":null,"default_value":"","external_name":"from","restriction":"Array(DAG::Tip)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DAG::Tip","visibility":"Public","body":"tips.max_by do |t|\n  t.distance\nend"}},{"id":"tips(fromvertex:Vertex,visited=Hash(Vertex::Name,Bool).new(false),distance=Hash(Vertex,Int32).new(0),tips=Array(DAG::Tip).new,start:Vertex?=nil,current_branch_root:Vertex?=nil):Array(DAG::Tip)-instance-method","html_id":"tips(fromvertex:Vertex,visited=Hash(Vertex::Name,Bool).new(false),distance=Hash(Vertex,Int32).new(0),tips=Array(DAG::Tip).new,start:Vertex?=nil,current_branch_root:Vertex?=nil):Array(DAG::Tip)-instance-method","name":"tips","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"Vertex"},{"name":"visited","doc":null,"default_value":"Hash(Vertex::Name, Bool).new(false)","external_name":"visited","restriction":""},{"name":"distance","doc":null,"default_value":"Hash(Vertex, Int32).new(0)","external_name":"distance","restriction":""},{"name":"tips","doc":null,"default_value":"Array(DAG::Tip).new","external_name":"tips","restriction":""},{"name":"start","doc":null,"default_value":"nil","external_name":"start","restriction":"Vertex | Nil"},{"name":"current_branch_root","doc":null,"default_value":"nil","external_name":"current_branch_root","restriction":"Vertex | Nil"}],"args_string":"(from vertex : Vertex, visited = <span class=\"t\">Hash</span>(<span class=\"t\">Vertex</span><span class=\"t\">::</span><span class=\"t\">Name</span>, <span class=\"t\">Bool</span>).<span class=\"k\">new</span>(<span class=\"n\">false</span>), distance = <span class=\"t\">Hash</span>(<span class=\"t\">Vertex</span>, <span class=\"t\">Int32</span>).<span class=\"k\">new</span>(<span class=\"n\">0</span>), tips = <span class=\"t\">Array</span>(<span class=\"t\">DAG</span><span class=\"t\">::</span><span class=\"t\">Tip</span>).<span class=\"k\">new</span>, start : Vertex? = <span class=\"n\">nil</span>, current_branch_root : Vertex? = <span class=\"n\">nil</span>) : Array(DAG::Tip)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L31","def":{"name":"tips","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"Vertex"},{"name":"visited","doc":null,"default_value":"Hash(Vertex::Name, Bool).new(false)","external_name":"visited","restriction":""},{"name":"distance","doc":null,"default_value":"Hash(Vertex, Int32).new(0)","external_name":"distance","restriction":""},{"name":"tips","doc":null,"default_value":"Array(DAG::Tip).new","external_name":"tips","restriction":""},{"name":"start","doc":null,"default_value":"nil","external_name":"start","restriction":"Vertex | Nil"},{"name":"current_branch_root","doc":null,"default_value":"nil","external_name":"current_branch_root","restriction":"Vertex | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(DAG::Tip)","visibility":"Public","body":"if distance.empty?\n  start = vertex\nend\nvisited[vertex.name] = true\nsorted_children = vertex.children.sort_by do |c|\n  c.name\nend\nif sorted_children.empty?\n  tips << DAG::Tip.new(vertex: vertex, distance: distance[vertex], branch_root: current_branch_root)\nelse\n  sorted_children.each do |child|\n    if !visited[child.name]\n      if start == vertex\n        current_branch_root = child\n      end\n      distance[child] = distance[vertex] + 1\n      tips(from: child, visited: visited, distance: distance, tips: tips, start: start, current_branch_root: current_branch_root)\n    end\n  end\nend\ntips\n"}}],"macros":[],"types":[{"html_id":"github.com/cocol-project/probfin/DAG/Tip","path":"DAG/Tip.html","kind":"struct","full_name":"DAG::Tip","name":"Tip","abstract":false,"superclass":{"html_id":"github.com/cocol-project/probfin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/cocol-project/probfin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/cocol-project/probfin/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/cocol-project/probfin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"dag.cr","line_number":6,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/cocol-project/probfin/DAG","kind":"module","full_name":"DAG","name":"DAG"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertex:DAG::Vertex,distance:Int32,branch_root:DAG::Vertex?)-class-method","html_id":"new(vertex:DAG::Vertex,distance:Int32,branch_root:DAG::Vertex?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"DAG::Vertex"},{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Int32"},{"name":"branch_root","doc":null,"default_value":"","external_name":"branch_root","restriction":"DAG::Vertex | Nil"}],"args_string":"(vertex : DAG::Vertex, distance : Int32, branch_root : DAG::Vertex?)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L6","def":{"name":"new","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"DAG::Vertex"},{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Int32"},{"name":"branch_root","doc":null,"default_value":"","external_name":"branch_root","restriction":"DAG::Vertex | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(vertex, distance, branch_root)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"branch_root:DAG::Vertex?-instance-method","html_id":"branch_root:DAG::Vertex?-instance-method","name":"branch_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DAG::Vertex?","source_link":null,"def":{"name":"branch_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DAG::Vertex | Nil","visibility":"Public","body":"@branch_root"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L6","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@vertex.clone, @distance.clone, @branch_root.clone)"}},{"id":"copy_with(vertex_vertex=@vertex,distance_distance=@distance,branch_root_branch_root=@branch_root)-instance-method","html_id":"copy_with(vertex_vertex=@vertex,distance_distance=@distance,branch_root_branch_root=@branch_root)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_vertex","doc":null,"default_value":"@vertex","external_name":"vertex","restriction":""},{"name":"_distance","doc":null,"default_value":"@distance","external_name":"distance","restriction":""},{"name":"_branch_root","doc":null,"default_value":"@branch_root","external_name":"branch_root","restriction":""}],"args_string":"(vertex _vertex = @vertex, distance _distance = @distance, branch_root _branch_root = @branch_root)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L6","def":{"name":"copy_with","args":[{"name":"_vertex","doc":null,"default_value":"@vertex","external_name":"vertex","restriction":""},{"name":"_distance","doc":null,"default_value":"@distance","external_name":"distance","restriction":""},{"name":"_branch_root","doc":null,"default_value":"@branch_root","external_name":"branch_root","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_vertex, _distance, _branch_root)"}},{"id":"distance:Int32-instance-method","html_id":"distance:Int32-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"def":{"name":"distance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@distance"}},{"id":"vertex:DAG::Vertex-instance-method","html_id":"vertex:DAG::Vertex-instance-method","name":"vertex","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DAG::Vertex","source_link":null,"def":{"name":"vertex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DAG::Vertex","visibility":"Public","body":"@vertex"}}],"macros":[],"types":[]},{"html_id":"github.com/cocol-project/probfin/DAG/Vertex","path":"DAG/Vertex.html","kind":"class","full_name":"DAG::Vertex","name":"Vertex","abstract":false,"superclass":{"html_id":"github.com/cocol-project/probfin/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/cocol-project/probfin/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/cocol-project/probfin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"dag.cr","line_number":11,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/cocol-project/probfin/DAG","kind":"module","full_name":"DAG","name":"DAG"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,edges={}ofName=>Vertex)-class-method","html_id":"new(name,edges={}ofName=&gt;Vertex)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"edges","doc":null,"default_value":"{} of Name => Vertex","external_name":"edges","restriction":""}],"args_string":"(name, edges = {} <span class=\"k\">of</span> <span class=\"t\">Name</span> => <span class=\"t\">Vertex</span>)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L17","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"edges","doc":null,"default_value":"{} of Name => Vertex","external_name":"edges","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(edge_tovertex:Vertex):Nil-instance-method","html_id":"add(edge_tovertex:Vertex):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"edge_to","restriction":"Vertex"}],"args_string":"(edge_to vertex : Vertex) : Nil","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L20","def":{"name":"add","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"edge_to","restriction":"Vertex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@edges[vertex.name] = vertex"}},{"id":"children:Array(Vertex)-instance-method","html_id":"children:Array(Vertex)-instance-method","name":"children","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Vertex)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L24","def":{"name":"children","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Vertex)","visibility":"Public","body":"@edges.values"}},{"id":"edges:Hash(Name,Vertex)-instance-method","html_id":"edges:Hash(Name,Vertex)-instance-method","name":"edges","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Name, Vertex)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L15","def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Name, Vertex)","visibility":"Public","body":"@edges"}},{"id":"name:Name-instance-method","html_id":"name:Name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Name","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr#L14","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Name","visibility":"Public","body":"@name"}}],"macros":[],"types":[{"html_id":"github.com/cocol-project/probfin/DAG/Vertex/Name","path":"DAG/Vertex/Name.html","kind":"alias","full_name":"DAG::Vertex::Name","name":"Name","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dag.cr","line_number":12,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/dag.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/cocol-project/probfin/DAG/Vertex","kind":"class","full_name":"DAG::Vertex","name":"Vertex"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/cocol-project/probfin/ProbFin","path":"ProbFin.html","kind":"module","full_name":"ProbFin","name":"ProbFin","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"probfin.cr","line_number":7,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"finalize(fromstarting_blockhash:BlockHash,chain_length_threshold:Int32=6,tip_diff_threshold:Int32=2):BlockHash?-class-method","html_id":"finalize(fromstarting_blockhash:BlockHash,chain_length_threshold:Int32=6,tip_diff_threshold:Int32=2):BlockHash?-class-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[{"name":"starting_blockhash","doc":null,"default_value":"","external_name":"from","restriction":"BlockHash"},{"name":"chain_length_threshold","doc":null,"default_value":"6","external_name":"chain_length_threshold","restriction":"Int32"},{"name":"tip_diff_threshold","doc":null,"default_value":"2","external_name":"tip_diff_threshold","restriction":"Int32"}],"args_string":"(from starting_blockhash : BlockHash, chain_length_threshold : Int32 = <span class=\"n\">6</span>, tip_diff_threshold : Int32 = <span class=\"n\">2</span>) : BlockHash?","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr#L54","def":{"name":"finalize","args":[{"name":"starting_blockhash","doc":null,"default_value":"","external_name":"from","restriction":"BlockHash"},{"name":"chain_length_threshold","doc":null,"default_value":"6","external_name":"chain_length_threshold","restriction":"Int32"},{"name":"tip_diff_threshold","doc":null,"default_value":"2","external_name":"tip_diff_threshold","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlockHash | Nil","visibility":"Public","body":"tips = DAG.tips(from: ProbFin::Chain.dag[starting_blockhash])\nif below_chain_length_threshold?(tips: tips, threshold: chain_length_threshold)\n  return nil\nend\nif below_tip_diff_threshold?(tips: tips, threshold: tip_diff_threshold)\n  return nil\nend\ntolb = tips.max_by do |t|\n  t.distance\nend\nremaining_chain = self.traverse_remaining(from: tolb.branch_root)\nProbFin::Chain.orphans.each do |_, orphans|\n  orphans.each do |o|\n    h = Hash(BlockHash, DAG::Vertex).new\n    h[o] = ProbFin::Chain.dag[o]\n    remaining_chain = remaining_chain.merge(h)\n  end\nend\nProbFin::Chain.dag = remaining_chain\n(tolb.branch_root.as(DAG::Vertex)).name\n"}},{"id":"push(block:BlockHash,parent:BlockHash)-class-method","html_id":"push(block:BlockHash,parent:BlockHash)-class-method","name":"push","doc":null,"summary":null,"abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"BlockHash"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"BlockHash"}],"args_string":"(block : BlockHash, parent : BlockHash)","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr#L30","def":{"name":"push","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"BlockHash"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"BlockHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_vertex = DAG::Vertex.new(name: block)\nProbFin::Chain.dag[block] = new_vertex\nif !ProbFin::Chain.dag[parent]?\n  ProbFin::Chain.orphans[parent] << block\nend\nif ProbFin::Chain.dag[parent]?\n  ProbFin::Chain.dag[parent].add(edge_to: new_vertex)\nend\nif orphans = ProbFin::Chain.orphans[block]?\n  orphans.each do |orphan|\n    ProbFin::Chain.dag[block].add(edge_to: ProbFin::Chain.dag[orphan])\n  end\n  ProbFin::Chain.orphans.delete(block)\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/cocol-project/probfin/ProbFin/BlockHash","path":"ProbFin/BlockHash.html","kind":"alias","full_name":"ProbFin::BlockHash","name":"BlockHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"probfin.cr","line_number":8,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/cocol-project/probfin/ProbFin","kind":"module","full_name":"ProbFin","name":"ProbFin"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/cocol-project/probfin/ProbFin/Chain","path":"ProbFin/Chain.html","kind":"module","full_name":"ProbFin::Chain","name":"Chain","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"probfin.cr","line_number":10,"url":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr"}],"repository_name":"github.com/cocol-project/probfin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/cocol-project/probfin/ProbFin/Chain","kind":"module","full_name":"ProbFin::Chain","name":"Chain"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/cocol-project/probfin/ProbFin","kind":"module","full_name":"ProbFin","name":"ProbFin"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"dag-instance-method","html_id":"dag-instance-method","name":"dag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr#L13","def":{"name":"dag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@dag || (@@dag = Hash(BlockHash, DAG::Vertex).new)"}},{"id":"dag=(hash:Hash(BlockHash,DAG::Vertex))-instance-method","html_id":"dag=(hash:Hash(BlockHash,DAG::Vertex))-instance-method","name":"dag=","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(BlockHash, DAG::Vertex)"}],"args_string":"(hash : Hash(BlockHash, DAG::Vertex))","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr#L17","def":{"name":"dag=","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(BlockHash, DAG::Vertex)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@dag = hash"}},{"id":"orphans-instance-method","html_id":"orphans-instance-method","name":"orphans","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/cocol-project/probfin/blob/dc5cd06d99e0856db48add12cb412a7ea66d1cfa/src/probfin.cr#L21","def":{"name":"orphans","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@orphans || (@@orphans = Hash(BlockHash, Array(BlockHash)).new(->(hash : Hash(BlockHash, Array(BlockHash)), key : BlockHash) do\n  hash[key] = Array(BlockHash).new\nend))"}}],"macros":[],"types":[]}]}]}}